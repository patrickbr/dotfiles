# use vi mode for bash
set -o vi
# use jj as vi escape
bind -m vi-insert '"jj":vi-movement-mode'
bind -m vi-command '"gg":beginning-of-history'
bind -m vi-command '"G":end-of-history'

# simulate some vim commands
bind -m vi-command '"diw":"lbdw"'
bind -m vi-command '"yiw":"lbyw"'

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'

set bell-style none

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias cd..='cd ..'

# check for availability of __git_ps1
if ! type -t __git_ps1 &>/dev/null; then
	alias __git_ps1="git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/(\1)/'"
fi

# color stuff
if type -t tput &> /dev/null 2>&1 && [[ $(tput -T$TERM colors) -ge 8 ]]; then
	# use sexy prompt
	PS1="\[\e[01;32m\]┌\u\[\e[0m\]\[\e[01;37m\]@\[\e[0m\]\[\e[01;36m\]\h\[\e[0m\]\[\e[00;37m\]:\w\[\e[0m\]\[\e[00;33m\]\$(__git_ps1)\n\[\e[01;32m\]└\$\[\e[00;37m\]\\[\e[0m\] "

	# enable color support of ls and also add handy aliases
	if [ -x /usr/bin/dircolors ]; then
		test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
		alias ls='ls --color=auto'

		alias grep='grep --color=auto'
		alias fgrep='fgrep --color=auto'
		alias egrep='egrep --color=auto'
	fi

	# even more colors...
	alias grep='grep --color=auto'
	alias diff='colordiff'

	# show last return code if not null
	EC() { echo -e '\e[1;33m'$?'\e[m'; }
	trap EC ERR

	# pretty git log graph
	if type -t git &> /dev/null; then
		git config --global alias.lg "log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"
	fi
fi
